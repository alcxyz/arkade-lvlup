name: Go CI/CD

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[FORCE BUILD]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Test
        run: go test ./...

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build binary
        run: go build -o arkade-lvlup .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref_name }}
            release_name: Release ${{ github.ref_name }}
            body: New release for ${{ github.ref_name }}
            draft: false
            prerelease: false
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arkade-lvlup
          asset_name: arkade-lvlup-${{ runner.os }}
          asset_content_type: application/octet-stream
