name: Automated Go Build & Release Workflow

on:
  push:
    branches:
      - main
      - develop
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    if: "github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || contains(github.event.head_commit.message, '[FORCE BUILD]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Test
        run: go test ./...

      - name: Build binary
        run: go build -o arkade-lvlup-${{ matrix.os }} .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: arkade-lvlup-${{ matrix.os }}
          path: ./arkade-lvlup-${{ matrix.os }}

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download built artifact for Linux
        uses: actions/download-artifact@v2
        with:
          name: arkade-lvlup-ubuntu-latest
          path: artifacts/

      - name: Download built artifact for MacOS
        uses: actions/download-artifact@v2
        with:
          name: arkade-lvlup-macos-latest
          path: artifacts/

      - name: Download built artifact for Windows
        uses: actions/download-artifact@v2
        with:
          name: arkade-lvlup-windows-latest
          path: artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: New release for ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/arkade-lvlup-ubuntu-latest
          asset_name: arkade-lvlup-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for MacOS
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/arkade-lvlup-macos-latest
          asset_name: arkade-lvlup-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/arkade-lvlup-windows-latest
          asset_name: arkade-lvlup-windows.exe
          asset_content_type: application/octet-stream
