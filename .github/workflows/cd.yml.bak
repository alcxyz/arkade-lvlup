# .github/workflows/cd.yml
name: Release CD

on:
  push:
    branches:
      - main
      - develop
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Create Release and Upload Assets
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' || (github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, '[FORCE RELEASE]')) || contains(github.ref, 'refs/tags/v')"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract branch or tag name
      id: ref_name
      run: echo "::set-output name=branch_or_tag::$(echo ${GITHUB_REF#refs/*/})"

    - name: Download all built artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts

    - name: Rename Apple Silicon binary
      run: |
        if [ -f "./artifacts/arkade-lvlup-macos-latest-arm64" ]; then
            mv ./artifacts/arkade-lvlup-macos-latest-arm64 ./artifacts/arkade-lvlup-macos-latest-applesilicon
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}
      with:
          tag_name: ${{ steps.ref_name.outputs.branch_or_tag }}
          release_name: Release ${{ steps.ref_name.outputs.branch_or_tag }}
          body: New release for ${{ steps.ref_name.outputs.branch_or_tag }}
          token: ${{ secrets.MY_PAT }}
          draft: false
          prerelease: false

    - name: Upload Release Assets
      run: |
        for file in ./artifacts/*; do
          if [[ -f "$file" ]]; then
            echo "Uploading $file..."
            curl \
              -H "Authorization: token ${{ secrets.MY_PAT }}" \
              -H "Content-Type: $(file -b --mime-type $file)" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)"
          fi
        done
